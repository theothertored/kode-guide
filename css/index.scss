@import "./_fonts.scss";
@import "./_themes.scss";



// #region base

// base class for things simply highlighting on hover, without sticking after touch
@media (hover: hover) {
    %standard-hover {
        transition: background-color ease-in-out 0.15s;

        &:hover {
            background-color: $c-bg-hover;
        }
    }
}

// #endregion



// #region layout


// layout variables
$guide-max-w: 35rem;
$toc-w: 24rem;
$mobile-threshold: $toc-w + 5rem + $guide-max-w;
$toc-fab-to-border-threshold: $toc-w + 5rem;
$toc-fab-size: 3rem;
$toc-fab-icon-size: 1rem;
$toc-fab-scroll-out-y-offset: 5rem;

* {
    box-sizing: border-box;
}

html,
body {
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
}

.guide {
    width: 100%;
    max-width: $guide-max-w;
    padding: 0 1rem;
    padding-bottom: 15rem;
}


// #region header layout

// headers use padding-top for spacing so scrolling to a section via offsetTop leaves a nice gap
h1 {
    font-size: 2.5rem;
    margin: 2.5rem 0;
    margin-top: 6rem;

    > .small {
        margin-top: 1rem;
    }
}

h2 {
    font-size: 2rem;
    margin: 0;
    padding-top: 2rem;
}

h3 {
    font-size: 1.5rem;
    margin: 0;
    padding-top: 2.5rem;
}

h4 {
    font-size: 1.25rem;
    margin: 0;
    padding-top: 2rem;
}

// #endregion


// #region spacing

// spacing between 1. and 1.1. headings
h2 + h3 {
    padding-top: 1.5rem;
}

// spacing between header and first section item
h1, h2, h3, h4 {
    + p, + .snippet {
        margin-top: 2rem;
    }
}

// spacing between paragraphs
p {
    margin-top: 1.5rem;
    line-height: 140%;
}

// spacing before snippets
.snippet {
    margin-top: 0.5rem;
}

// spacing between list items
ul, ol {
    > li + li {
        margin-top: 0.5rem;
    }
}

// #endregion


// #region responsiveness

.toc {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    z-index: 2;
    width: $toc-w;
    max-width: calc(100vw - 3rem);

}

// toc position when expanded
.toc.in {
    transform: translateX(0);
}

// toc position when collapsed
.toc:not(.in) {
    transform: translateX(-100%);
}

// position fab 1rem from the top of the page and 1rem to the right of the guide
.toc-fab {
    position: fixed;
    top: 1rem;
    right: -1rem - $toc-fab-size;
    z-index: 2;
}

// larger than 1600px at 16px font size (max desktop)
@media screen and (min-width: 100rem) {

    // center the guide on the screen
    .guide {
        margin: auto;
    }

}

// less than 1600px at 16px, but can fit both toc and the guide side by side
@media screen and (min-width: $mobile-threshold) and (max-width: 100rem) {

    // center the guide on the screen by default
    .guide {
        transform: translateX(50vw) translateX(-50%);
        transition: transform 0.33s ease-in-out;
    }

    // position the guide to the right of the toc when it is expanded
    .toc.in ~ .guide {
        transform: translateX($toc-w + 5rem);
    }

}

// mobile (toc is overlaid as a left drawer)
@media screen and (max-width: $mobile-threshold) {

    // center the guide on the screen
    .guide {
        margin: auto;
    }

    // stop no-displaying the toc scrim
    .toc-scrim {
        display: block !important;
        transition: opacity ease-in 0.2s;
    }

    // js applies this class to hide the fab when scrolling down
    .toc-fab {
        &.scroll-out {
            transform: translateY(-5rem);
        }
    }
}

// the drawer will start to decrease in width at this point
@media screen and (max-width: $toc-fab-to-border-threshold) {

    // move fab so it overlaps the right border of the toc
    .toc-fab {
        right: -1.5rem;
        top: 0.5rem;
    }

    // if the toc is expanded, override the fab being hidden due to scrolling down
    .toc.in .toc-fab.scroll-out {
        transform: translateX(0);
    }

    // if the toc is collapsed, 
    .toc:not(.in) .toc-fab {

        // hide the fab when scrolling up and also move it to the right so it no longer overlaps the border of the toc
        &.scroll-out {
            transform: translate(2rem, -$toc-fab-scroll-out-y-offset);
        }

        // otherwise only move it to the right so it no longer overlaps the border of the toc
        &:not(.scroll-out) {
            transform: translateX(2rem);
        }
    }
}

// expand touch targets for touchscreens
@media (pointer: coarse) {
    $p: 0.75rem;

    .toc main > .toc-entry {
        padding-top: $p;
        padding-bottom: $p;
    }

    .theme-switcher {
        > .buttons {
            > label {
                padding: $p !important;
            }
        }
    }
}

// #endregion


// #endregion



// #region styling


// #region toc

.toc {
    display: flex;
    flex-direction: column;
    background-color: $c-bg;
    vertical-align: top;
    border-right: 1px solid $c-border-light;
    text-align: left;

    // class added by js to only animate after initial state was set
    &.transition {
        transition: transform ease-in-out 0.33s;
    }

    > header {
        display: flex;
        align-items: center;
        width: 100%;
        border-bottom: 1px solid $c-border-light;
        padding: 1rem;
        font-family: $font-family-heading;
        font-size: 1.5rem;
    }

    > main {
        padding: 0.5rem;
        flex: 1;
        overflow-y: auto;
        overscroll-behavior-y: contain;

        > .toc-entry {
            @extend %standard-hover;
            display: block;
            text-decoration: none;
            color: $c-text-on-bg-sec;
            padding: 0.5rem;
            -webkit-tap-highlight-color: transparent;
            border-radius: 0.25rem;
        }

        > .toc-1 {
            padding-left: 1rem;
        }

        > .toc-2 {
            padding-left: 2rem;
        }
    }

    > footer {
        padding: 1rem;
        padding-top: 0.5rem;
        border-top: 1px solid $c-border-light;

        > .theme-switcher {
            margin-top: 0;
        }
    }
}

.toc-fab {
    width: $toc-fab-size;
    height: $toc-fab-size;
    font-size: $toc-fab-icon-size;
    border-radius: 1.5rem;
    border: 1px solid $c-border-light;
    color: $c-text-on-bg-pri;
    background-color: $c-bg;
    -webkit-tap-highlight-color: transparent;
    outline: none;
    cursor: pointer;
    overflow: hidden;
    transition: transform ease-in-out 0.33s;

    // add a separate element responsible for just animating on hover
    // otherwise, switching the theme causes the fab bg colour to animate
    // and it looks very bad
    &:before {
        @extend %standard-hover;
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }

    > .top, > .mid, > .bot {
        position: absolute;
        top: 50%;
        left: 50%;
        width: $toc-fab-icon-size;
        height: 0.1rem;
        background-color: $c-text-on-bg-pri;
    }

    > .top {
        transform: translate(-50%, -50%) translateY(-$toc-fab-icon-size / 3);
    }

    > .mid {
        transform: translate(-50%, -50%);
    }

    > .bot {
        transform: translate(-50%, -50%) translateY($toc-fab-icon-size / 3);
    }
}

.toc.transition .toc-fab {
    > .top, > .mid, > .bot {
        transition: transform ease-in-out 0.15s;
    }
}

.toc.in .toc-fab {

    > .top {
        transform: translate(-50%, -50%) translateY(-$toc-fab-icon-size / 3) translate(-33%, $toc-fab-icon-size / 5.5) rotate(-45deg) scaleX(0.5);
    }
    
    > .mid {
        transform: translate(-50%, -50%);
    }
    
    > .bot {
        transform: translate(-50%, -50%) translateY($toc-fab-icon-size / 3) translate(-33%, -$toc-fab-icon-size / 5.5) rotate(45deg) scaleX(0.5);
    }

}

.toc-scrim {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: 1;
    background-color: $c-bg;
    opacity: 0;
    pointer-events: none;
    display: none;
    -webkit-tap-highlight-color: transparent;
}

.toc.in ~ .toc-scrim {
    opacity: 0.9;
    pointer-events: auto;
}

// #endregion


// #region basic component styling

body {
    font-family: $font-family-body;
    font-size: $font-size-base;
    color: $c-text-on-bg-sec;
    background-color: $c-bg;
    line-height: 1.25;
}

.guide {
    text-align: justify;
}


// header styles
h1, h2, h3, h4, h5, h6 {
    font-family: $font-family-heading;
    font-weight: 700;
    color: $c-text-on-bg-pri;
    text-align: left;

    > a {
        color: inherit;
        text-decoration: none;

        &:hover {
            text-decoration: underline;
        }
    }
}

// styling for that tiny text below the main header
.small {
    font-size: $font-size-small;
    font-weight: normal;
    color: $c-text-on-bg-tet;
    font-family: $font-family-body;
}

.guide > footer {
    margin-top: 4rem;
    border-top: 1px dashed $c-border-light;
}

// there is only one image at the moment, at the very start
.image-container {
    width: 100%;

    img {
        display: block;
        max-width: 100%;
        padding: 1rem;
    }

    label {
        margin-top: -0.5rem;
        display: block;
        text-align: center;
        font-size: $font-size-small;
        color: $c-text-on-bg-tet;
        font-style: italic;
    }
}

// recolour links
a {
    color: $c-text-link;
}

// #endregion


// #region section counters

.guide {
    counter-reset: h2 h3 h4;
}

h2 {
    counter-increment: h2;
    counter-reset: h3;

    &:before {
        content: counter(h2) ". ";
    }
}

h3 {
    counter-increment: h3;
    counter-reset: h4;

    &:before {
        content: counter(h2) "." counter(h3) ". ";
    }
}

h4 {
    counter-increment: h4;

    &:before {
        content: counter(h2) "." counter(h3) "." counter(h4) ". ";
    }
}

// #endregion


// #region code & highlighting

// inline code bits
code {
    display: inline-block;
    font-family: $font-family-mono;
    font-size: $font-size-code;
    border: 1px solid $c-border-light;
    // background-color: $c-code-bg;
    border-radius: 0.25em;
    padding: 0 0.35em;
    margin: 0 0.2em;
    word-break: break-all;
    text-align: left;
    font-style: normal;

    > pre {
        margin: 0;
    }
}

// light mode highlights using background color
:root.light {

    .hl {
        position: relative;
        z-index: -1;
        display: inline-block;
        line-height: 1;
        white-space: pre-wrap;
        padding: 0.1rem;
        margin: -0.1rem;

        + .hl {
            margin-left: 0.1rem;
        }
    }

    @for $i from 1 to 7 {
        .hl-#{$i} {
            background-color: var(--c-hl-#{$i});

            &.strong {
                background-color: var(--c-hl-#{$i}-strong);
            }
        }
    }

    .hl-before {
        background-color: var(--c-hl-before);
    }

    .hl-after {
        background-color: var(--c-hl-after);
    }

    .hl-error {
        background-color: var(--c-hl-error);
    }

    .hl-true {
        background-color: var(--c-hl-true);

        &.strong {
            background-color: var(--c-hl-true-strong);
        }
    }

    .hl-false {
        background-color: var(--c-hl-false);

        &.strong {
            background-color: var(--c-hl-false-strong);
        }
    }

    .hl-gray {
        background-color: var(--c-hl-gray);

        &.strong {
            background-color: var(--c-hl-gray-strong);
        }
    }
}

// dark mode highlights using text color
:root:not(.light) {

    @for $i from 1 to 7 {
        .hl-#{$i} {
            color: var(--c-hl-#{$i});

            &.strong {
                color: var(--c-hl-#{$i}-strong);
            }
        }
    }

    .hl-before {
        color: var(--c-hl-before);
    }

    .hl-after {
        color: var(--c-hl-after);
    }

    .hl-error {
        color: var(--c-hl-error);
    }

    .hl-true {
        color: var(--c-hl-true);

        &.strong {
            color: var(--c-hl-true-strong);
        }
    }

    .hl-false {
        color: var(--c-hl-false);

        &.strong {
            color: var(--c-hl-false-strong);
        }
    }

    .hl-gray {
        color: var(--c-hl-gray);

        &.strong {
            color: var(--c-hl-gray-strong);
        }
    }

    .hl.strong {
        font-weight: bold;
    }

}

// #endregion


// #region snippets

.snippet {
    margin-top: 1rem;

    label {
        display: block;
        position: sticky;
        left: 0;
        font-size: $font-size-small;
        color: $c-text-on-bg-tet;
        line-height: 1;
        padding: 0.4rem 0.5rem;

        > .error,
        > .success {

            &:before {
                content: "-";
                margin: 0 0.25rem;
                color: $c-text-on-bg-tet;
            }

            font-style: italic;
        }

        > .error {
            color: $c-text-error;
        }

        > .success {
            color: $c-text-success;
        }

        &.output {
            &:before {
                content: "Output";
            }
        }
    }

    > code, .step > code {
        display: block;
        border: 1px solid $c-border-light;
        padding: 0.5rem;
        line-height: 1.5;
        margin: 0;
        overflow: hidden;
        position: relative;

        &:empty {
            user-select: none;

            &:before {
                content: " ";
                white-space: pre;
            }
        }

        + code {
            margin-top: 0.2rem;
        }

        + label {
            margin-top: 0.5rem;
        }

        &.copied {
            &:after {
                content: "";
                background-color: $c-bg-copied;
                position: absolute;
                top: 50%;
                left: 50%;
                z-index: 1;
                width: 50%;
                height: 400%;
                transform-origin: center;
                animation: 0.5s 1 forwards copied;
                animation-timing-function: ease-out;

                @keyframes copied {
                    $rot: 20deg;
                    $tr: 80%;

                    0% {
                        transform: translateX(-50%) translateX(Min($guide-max-w / 2, 50vw)) translateX($tr) translateY(-50%) translateX(-50%) rotate($rot);
                    }

                    100% {
                        transform: translateX(-50%) translateX(Max(-$guide-max-w / 2, -50vw)) translateX(-$tr) translateY(-50%) translateX(-50%) rotate($rot);
                    }
                }
            }
        }
    }

    > .step {

        .arrow {
            display: flex;
            align-items: center;
            justify-content: start;
            padding: 0 0.5rem;
            margin-top: -0.25rem;
            margin-bottom: -0.2rem;
            line-height: 1;

            &::before {
                content: "↓";
                color: $c-text-on-bg-tet;
            }
        }

        + label {
            margin-top: 0.5rem;
        }
    }

    > .note {
        font-size: $font-size-small;
        color: $c-text-on-bg-tet;
        margin-top: 0.5rem;
        font-style: italic;
        padding: 0 0.5rem;
    }

    + .snippet {
        margin-top: 1.5rem;
    }
}

// #endregion


// #region tables

.table-container {
    width: calc(100% + 16px);
    padding: 8px;
    margin: 0 -8px;
    overflow-x: auto;
}

table {
    border-spacing: 0;
    border-collapse: separate;
    border-radius: 0.25rem;
    border: 1px solid $c-border-light;
    text-align: left;

    thead > tr:last-child > th {
        border-bottom: 1px solid $c-border-heavy;
    }

    tr:first-child {

        th,
        td {
            border-top: none;
        }
    }

    th,
    td {
        padding: 0.5rem 0.75rem;
        border-top: 1px solid $c-border-light;
        border-left: 1px solid $c-border-light;

        &:first-child {
            border-left: none;
        }
    }

    code {
        white-space: nowrap;
    }
}

#math-symbol-table {

    td,
    th {
        &:first-child {
            text-align: center;
            font-weight: bold;
        }

        &:nth-child(2) {
            width: 100%;
        }
    }
}

#string-mode-table {

    td,
    th {
        &:nth-child(1) {
            text-align: center;
            font-weight: bold;
        }

        &:nth-child(2) {
            width: 100%;
        }
    }
}

#comparison-operator-table {

    td,
    th {
        &:nth-child(1) {
            text-align: center;
            font-weight: bold;
        }

        &:nth-child(2) {
            width: 100%;
        }
    }
}

:root.light {

    #comparison-operator-table {

        td,
        th {
            &:nth-child(3) {
                background-color: var(--c-hl-true);
            }

            &:nth-child(4) {
                background-color: var(--c-hl-false);
            }
        }
    }

}

:root:not(.light) {
    #comparison-operator-table {

        td,
        th {
            &:nth-child(3) {
                color: var(--c-hl-true);
            }

            &:nth-child(4) {
                color: var(--c-hl-false);
            }
        }
    }
}

#logical-operator-table {

    td,
    th {
        width: 80px;
        text-align: center;

        &:nth-child(3),
        &:nth-child(4) {
            border-left: 1px solid $c-border-heavy;
        }
    }
}

#tf-token-table {
    tr {
        &:nth-child(4) {
            td {
                border-top: 1px solid $c-border-heavy;
            }
        }
    }

    td,
    th {
        &:nth-child(1) {
            text-align: center;
            font-weight: bold;
        }

        &:nth-child(2) {
            width: 100%;
        }
    }
}

// #endregion


// #region theme switcher

.theme-switcher {

    > label {
        display: block;
        font-size: $font-size-small;
        color: $c-text-on-bg-tet;

        + .buttons {
            margin-top: 0.5rem;
        }
    }

    > .buttons {
        display: flex;
        flex-direction: row;
        gap: 0.5rem;
        margin-top: 1rem;
        -webkit-tap-highlight-color: transparent;

        > label {
            flex: 1;
            padding: 0.5rem;
            text-align: center;
            position: relative;
            transition: background-color ease-in-out 0.1s, transform ease-in-out 0.33s;
            cursor: pointer;

            > input {
                display: none;
            }

            > span {
                &:before {
                    content: "";
                    position: absolute;
                    top: 0;
                    left: 0;
                    bottom: 0;
                    right: 0;
                    border-radius: 0.25rem;
                    border: 1px solid $c-border-light;
                    // overshoot
                    transition: border cubic-bezier(0.87, 1.92, 0.48, 0.75) 0.15s;
                }
            }

            @media (hover: hover) {
                &:hover {
                    background-color: $c-bg-hover;
                }
            }

            &:active {
                transition-duration: 0s;
                transform: scale(0.96);
            }

            > input:checked + span {
                &:before {
                    border: 0.15rem solid $c-accent;
                }
            }
        }
    }
}

.theme-switch-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    bottom: 0;
    z-index: 10;
    transform: translateY(-100%);
    opacity: 1;
    transition: transform ease-in 0.25s;

    &.dark {
        background-color: $c-dark-bg;
    }

    &.light {
        background-color: $c-light-bg;
    }

    &.in {
        transform: translateY(0);
    }

    &.out {
        transform: translateY(100%);
        transition-timing-function: ease-out;
        pointer-events: none;
    }
}

// #endregion


// #endregion



// #region misc

.nowrap {
    white-space: nowrap;
}

.text-right {
    text-align: right;
}

// #endregion